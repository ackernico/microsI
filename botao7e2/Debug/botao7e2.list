
botao7e2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000200  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003c4  080003cc  000103cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .init_array   00000004  080003c4  080003c4  000103c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  080003c8  080003c8  000103c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000000  20000000  20000000  000103cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          0000001c  20000000  080003cc  00020000  2**2
                  ALLOC
  7 ._user_heap_stack 00000400  2000001c  080003cc  0002001c  2**0
                  ALLOC
  8 .ARM.attributes 00000030  00000000  00000000  000103cc  2**0
                  CONTENTS, READONLY
  9 .debug_info   00000a32  00000000  00000000  000103fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00000213  00000000  00000000  00010e2e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000070  00000000  00000000  00011048  2**3
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  000110b8  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00000402  00000000  00000000  00011100  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00000418  00000000  00000000  00011502  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .comment      0000007c  00000000  00000000  0001191a  2**0
                  CONTENTS, READONLY
 16 .debug_frame  000000b0  00000000  00000000  00011998  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .stabstr      0000003f  00000000  00000000  00011a48  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080003ac 	.word	0x080003ac

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	080003ac 	.word	0x080003ac

08000204 <main>:
Botao = PC1
*/
#include "stm32f4xx.h"

int main(void)
{
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
	int psc;
	int botao;

	RCC->AHB1ENR = 0x87;
 800020a:	4b20      	ldr	r3, [pc, #128]	; (800028c <main+0x88>)
 800020c:	2287      	movs	r2, #135	; 0x87
 800020e:	631a      	str	r2, [r3, #48]	; 0x30
	RCC->APB2ENR = 1 << 17;
 8000210:	4b1e      	ldr	r3, [pc, #120]	; (800028c <main+0x88>)
 8000212:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8000216:	645a      	str	r2, [r3, #68]	; 0x44

	GPIOA->MODER = 28000000;
 8000218:	4b1d      	ldr	r3, [pc, #116]	; (8000290 <main+0x8c>)
 800021a:	4a1e      	ldr	r2, [pc, #120]	; (8000294 <main+0x90>)
 800021c:	601a      	str	r2, [r3, #0]
	GPIOB->MODER |= 0x1; // Definir Led como saida
 800021e:	4a1e      	ldr	r2, [pc, #120]	; (8000298 <main+0x94>)
 8000220:	4b1d      	ldr	r3, [pc, #116]	; (8000298 <main+0x94>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	f043 0301 	orr.w	r3, r3, #1
 8000228:	6013      	str	r3, [r2, #0]
	GPIOC->PUPDR |= 0b0100; //Pull-Up no botao
 800022a:	4a1c      	ldr	r2, [pc, #112]	; (800029c <main+0x98>)
 800022c:	4b1b      	ldr	r3, [pc, #108]	; (800029c <main+0x98>)
 800022e:	68db      	ldr	r3, [r3, #12]
 8000230:	f043 0304 	orr.w	r3, r3, #4
 8000234:	60d3      	str	r3, [r2, #12]


	TIM10->CR1 = 0x1;
 8000236:	4b1a      	ldr	r3, [pc, #104]	; (80002a0 <main+0x9c>)
 8000238:	2201      	movs	r2, #1
 800023a:	601a      	str	r2, [r3, #0]
	TIM10->ARR = 999;
 800023c:	4b18      	ldr	r3, [pc, #96]	; (80002a0 <main+0x9c>)
 800023e:	f240 32e7 	movw	r2, #999	; 0x3e7
 8000242:	62da      	str	r2, [r3, #44]	; 0x2c

	while (1)
  {
		psc = 7999;
 8000244:	f641 733f 	movw	r3, #7999	; 0x1f3f
 8000248:	607b      	str	r3, [r7, #4]
		TIM10->PSC = psc;
 800024a:	4a15      	ldr	r2, [pc, #84]	; (80002a0 <main+0x9c>)
 800024c:	687b      	ldr	r3, [r7, #4]
 800024e:	6293      	str	r3, [r2, #40]	; 0x28

		botao = GPIOC->IDR & 0b10;
 8000250:	4b12      	ldr	r3, [pc, #72]	; (800029c <main+0x98>)
 8000252:	691b      	ldr	r3, [r3, #16]
 8000254:	f003 0302 	and.w	r3, r3, #2
 8000258:	603b      	str	r3, [r7, #0]

		if(botao == 0){
 800025a:	683b      	ldr	r3, [r7, #0]
 800025c:	2b00      	cmp	r3, #0
 800025e:	d102      	bne.n	8000266 <main+0x62>
				psc = 2284;
 8000260:	f640 03ec 	movw	r3, #2284	; 0x8ec
 8000264:	607b      	str	r3, [r7, #4]
		}

		if(TIM10->SR & 0x1){
 8000266:	4b0e      	ldr	r3, [pc, #56]	; (80002a0 <main+0x9c>)
 8000268:	691b      	ldr	r3, [r3, #16]
 800026a:	f003 0301 	and.w	r3, r3, #1
 800026e:	2b00      	cmp	r3, #0
 8000270:	d0e8      	beq.n	8000244 <main+0x40>
			GPIOB->ODR ^= 0x1;
 8000272:	4a09      	ldr	r2, [pc, #36]	; (8000298 <main+0x94>)
 8000274:	4b08      	ldr	r3, [pc, #32]	; (8000298 <main+0x94>)
 8000276:	695b      	ldr	r3, [r3, #20]
 8000278:	f083 0301 	eor.w	r3, r3, #1
 800027c:	6153      	str	r3, [r2, #20]
			TIM10->SR &= 0x0;
 800027e:	4b08      	ldr	r3, [pc, #32]	; (80002a0 <main+0x9c>)
 8000280:	691b      	ldr	r3, [r3, #16]
 8000282:	4b07      	ldr	r3, [pc, #28]	; (80002a0 <main+0x9c>)
 8000284:	2200      	movs	r2, #0
 8000286:	611a      	str	r2, [r3, #16]
		psc = 7999;
 8000288:	e7dc      	b.n	8000244 <main+0x40>
 800028a:	bf00      	nop
 800028c:	40023800 	.word	0x40023800
 8000290:	40020000 	.word	0x40020000
 8000294:	01ab3f00 	.word	0x01ab3f00
 8000298:	40020400 	.word	0x40020400
 800029c:	40020800 	.word	0x40020800
 80002a0:	40014400 	.word	0x40014400

080002a4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 80002a4:	f8df d034 	ldr.w	sp, [pc, #52]	; 80002dc <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 80002a8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80002aa:	e003      	b.n	80002b4 <LoopCopyDataInit>

080002ac <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80002ac:	4b0c      	ldr	r3, [pc, #48]	; (80002e0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80002ae:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80002b0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80002b2:	3104      	adds	r1, #4

080002b4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80002b4:	480b      	ldr	r0, [pc, #44]	; (80002e4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80002b6:	4b0c      	ldr	r3, [pc, #48]	; (80002e8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80002b8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80002ba:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80002bc:	d3f6      	bcc.n	80002ac <CopyDataInit>
  ldr  r2, =_sbss
 80002be:	4a0b      	ldr	r2, [pc, #44]	; (80002ec <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80002c0:	e002      	b.n	80002c8 <LoopFillZerobss>

080002c2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80002c2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80002c4:	f842 3b04 	str.w	r3, [r2], #4

080002c8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80002c8:	4b09      	ldr	r3, [pc, #36]	; (80002f0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80002ca:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80002cc:	d3f9      	bcc.n	80002c2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80002ce:	f000 f813 	bl	80002f8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80002d2:	f000 f847 	bl	8000364 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80002d6:	f7ff ff95 	bl	8000204 <main>
  bx  lr    
 80002da:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 80002dc:	20020000 	.word	0x20020000
  ldr  r3, =_sidata
 80002e0:	080003cc 	.word	0x080003cc
  ldr  r0, =_sdata
 80002e4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80002e8:	20000000 	.word	0x20000000
  ldr  r2, =_sbss
 80002ec:	20000000 	.word	0x20000000
  ldr  r3, = _ebss
 80002f0:	2000001c 	.word	0x2000001c

080002f4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80002f4:	e7fe      	b.n	80002f4 <ADC_IRQHandler>
	...

080002f8 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80002f8:	b480      	push	{r7}
 80002fa:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80002fc:	4a16      	ldr	r2, [pc, #88]	; (8000358 <SystemInit+0x60>)
 80002fe:	4b16      	ldr	r3, [pc, #88]	; (8000358 <SystemInit+0x60>)
 8000300:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000304:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000308:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 800030c:	4a13      	ldr	r2, [pc, #76]	; (800035c <SystemInit+0x64>)
 800030e:	4b13      	ldr	r3, [pc, #76]	; (800035c <SystemInit+0x64>)
 8000310:	681b      	ldr	r3, [r3, #0]
 8000312:	f043 0301 	orr.w	r3, r3, #1
 8000316:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 8000318:	4b10      	ldr	r3, [pc, #64]	; (800035c <SystemInit+0x64>)
 800031a:	2200      	movs	r2, #0
 800031c:	609a      	str	r2, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 800031e:	4a0f      	ldr	r2, [pc, #60]	; (800035c <SystemInit+0x64>)
 8000320:	4b0e      	ldr	r3, [pc, #56]	; (800035c <SystemInit+0x64>)
 8000322:	681b      	ldr	r3, [r3, #0]
 8000324:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8000328:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800032c:	6013      	str	r3, [r2, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 800032e:	4b0b      	ldr	r3, [pc, #44]	; (800035c <SystemInit+0x64>)
 8000330:	4a0b      	ldr	r2, [pc, #44]	; (8000360 <SystemInit+0x68>)
 8000332:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8000334:	4a09      	ldr	r2, [pc, #36]	; (800035c <SystemInit+0x64>)
 8000336:	4b09      	ldr	r3, [pc, #36]	; (800035c <SystemInit+0x64>)
 8000338:	681b      	ldr	r3, [r3, #0]
 800033a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800033e:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 8000340:	4b06      	ldr	r3, [pc, #24]	; (800035c <SystemInit+0x64>)
 8000342:	2200      	movs	r2, #0
 8000344:	60da      	str	r2, [r3, #12]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8000346:	4b04      	ldr	r3, [pc, #16]	; (8000358 <SystemInit+0x60>)
 8000348:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800034c:	609a      	str	r2, [r3, #8]
#endif
}
 800034e:	bf00      	nop
 8000350:	46bd      	mov	sp, r7
 8000352:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000356:	4770      	bx	lr
 8000358:	e000ed00 	.word	0xe000ed00
 800035c:	40023800 	.word	0x40023800
 8000360:	24003010 	.word	0x24003010

08000364 <__libc_init_array>:
 8000364:	b570      	push	{r4, r5, r6, lr}
 8000366:	4e0d      	ldr	r6, [pc, #52]	; (800039c <__libc_init_array+0x38>)
 8000368:	4c0d      	ldr	r4, [pc, #52]	; (80003a0 <__libc_init_array+0x3c>)
 800036a:	1ba4      	subs	r4, r4, r6
 800036c:	10a4      	asrs	r4, r4, #2
 800036e:	2500      	movs	r5, #0
 8000370:	42a5      	cmp	r5, r4
 8000372:	d109      	bne.n	8000388 <__libc_init_array+0x24>
 8000374:	4e0b      	ldr	r6, [pc, #44]	; (80003a4 <__libc_init_array+0x40>)
 8000376:	4c0c      	ldr	r4, [pc, #48]	; (80003a8 <__libc_init_array+0x44>)
 8000378:	f000 f818 	bl	80003ac <_init>
 800037c:	1ba4      	subs	r4, r4, r6
 800037e:	10a4      	asrs	r4, r4, #2
 8000380:	2500      	movs	r5, #0
 8000382:	42a5      	cmp	r5, r4
 8000384:	d105      	bne.n	8000392 <__libc_init_array+0x2e>
 8000386:	bd70      	pop	{r4, r5, r6, pc}
 8000388:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800038c:	4798      	blx	r3
 800038e:	3501      	adds	r5, #1
 8000390:	e7ee      	b.n	8000370 <__libc_init_array+0xc>
 8000392:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000396:	4798      	blx	r3
 8000398:	3501      	adds	r5, #1
 800039a:	e7f2      	b.n	8000382 <__libc_init_array+0x1e>
 800039c:	080003c4 	.word	0x080003c4
 80003a0:	080003c4 	.word	0x080003c4
 80003a4:	080003c4 	.word	0x080003c4
 80003a8:	080003c8 	.word	0x080003c8

080003ac <_init>:
 80003ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003ae:	bf00      	nop
 80003b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003b2:	bc08      	pop	{r3}
 80003b4:	469e      	mov	lr, r3
 80003b6:	4770      	bx	lr

080003b8 <_fini>:
 80003b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003ba:	bf00      	nop
 80003bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003be:	bc08      	pop	{r3}
 80003c0:	469e      	mov	lr, r3
 80003c2:	4770      	bx	lr
